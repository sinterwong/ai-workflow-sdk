CMAKE_MINIMUM_REQUIRED(VERSION 3.10)
PROJECT(Tests)

LOAD_OPENCV()
LOAD_GTEST()

IF (TARGET_OS STREQUAL "Android")
    LOAD_ANDROID_ENV()
ENDIF()

SET(DEPENDENCY_INCLUDES
    ${PROJECT_INCLUDE_DIR}
    ${PROJECT_INCLUDE_DIR}/core
    ${OpenCV_INCLUDE_DIRS}
    ${GTEST_INCLUDE_DIRS}
)

SET(DEPENDENCY_LIBS
    ai_sdk
    ai_pipe
    core
    ${OpenCV_LIBS}
    module_logger
    ${GTEST_LIBS}
    ${ANDROID_JIN_LIBS}
)

FILE(GLOB CURRENT_DIR_SRCS ${CMAKE_CURRENT_SOURCE_DIR}/*.cpp ${CMAKE_CURRENT_SOURCE_DIR}/*.cc)

IF(INFER_ENGINE STREQUAL NCNN)
    LOAD_OPENMP()
	LOAD_NCNN()
	LIST(APPEND DEPENDENCY_INCLUDES ${NCNN_INCLUDE_DIR})
	LIST(APPEND DEPENDENCY_LIBS ${OpenMP_CXX_FLAGS} ${NCNN_LIBS})
	ADD_COMPILE_OPTIONS(-fopenmp)
    ADD_DEFINITIONS(-DUSE_NCNN)

ELSEIF(INFER_ENGINE STREQUAL ORT)
	LOAD_ONNXRUNTIME()
    LIST(APPEND DEPENDENCY_LIBS ${ONNXRUNTIME_LIBS})
	LIST(APPEND DEPENDENCY_INCLUDES ${ONNXRUNTIME_INCLUDE_DIR} ${ONNXRUNTIME_INCLUDE_DIR}/onnxruntime)
    ADD_DEFINITIONS(-DUSE_ORT)

ELSE()
    MESSAGE(FATAL_ERROR "Invalid inference engine type ${INFER_ENGINE}")
ENDIF()

MESSAGE(STATUS "APP SOURCES: ${CURRENT_DIR_SRCS}")

FILE(MAKE_DIRECTORY ${PROJECT_OUTPUT_DIR}/bin/tests)
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_OUTPUT_DIR}/bin/tests)

ADD_EXECUTABLE(main ${CURRENT_DIR_SRCS})
TARGET_INCLUDE_DIRECTORIES(main PRIVATE ${DEPENDENCY_INCLUDES})
TARGET_LINK_LIBRARIES(main PRIVATE ${DEPENDENCY_LIBS})
INSTALL(TARGETS main DESTINATION tests)

IF(EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/data")
    INSTALL(DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/data" DESTINATION .)
ENDIF()

IF(EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/models")
    INSTALL(DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/models" DESTINATION .)
ENDIF()
